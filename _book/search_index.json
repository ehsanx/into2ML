[["index.html", "Introduction to Machine Learning Preface Goal Pre-requisites Key references Version history Contributor list License", " Introduction to Machine Learning Ehsan Karim 2021-11-13 Preface This document is a very basic introduction to machine learning. Goal Basic Machine Learning Terminologies (pre-reading) Supervised vs.Â Unsupervised Learning Algorithms Concepts Examples Over-Fitting, Measuring Performance and Model Tuning Overall steps Pre-requisites The prerequisites are knowledge of multiple regression analysis and basic probability. Software demonstrations and codes will be provided in R, although proficiency in R is not required for understanding the concepts. Key references Kuhn, Max, and Kjell Johnson. Applied predictive modeling. New York: Springer, 2013. James, G., Witten, D., Hastie, T., &amp; Tibshirani, R. (2021). An introduction to statistical learning (2nd ed.). New York: springer. Version history Version 1.0 was created for course MEDI 504A, delivered on 2021 W. Feel free to reach out for any comments, corrections, suggestions. Contributor list Ehsan Karim (SPPH, UBC) License The online version of this book is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. You may share, adapt the content and may distribute your contributions under the same license (CC BY-NC-SA 4.0), but you have to give appropriate credit, and cannot use material for the commercial purposes. How to cite Karim, ME (2021) Introduction to Machine Learning, URL: ehsanx.github.io/intro2ML/, (v1.1). "],["rhc-data-description.html", "Chapter 1 RHC data description 1.1 Data download 1.2 Creating Analytic data 1.3 Notations 1.4 Basic data exploration", " Chapter 1 RHC data description Connors et al. (1996) published an article in JAMA. The article is about managing or guiding therapy for the critically ill patients in the intensive care unit. They considered a number of health-outcomes such as length of stay (hospital stay; measured continuously) death within certain period (death at any time up to 180 Days; measured as a binary variable) The original article was concerned about the association of right heart catheterization (RHC) use during the first 24 hours of care in the intensive care unit and the health-outcomes mentioned above, but we will use this data as a case study for our prediction modelling. 1.1 Data download Data is freely available from Vanderbilt Biostatistics, variable liste is available here, and the article is freely available from researchgate. # load the dataset ObsData &lt;- read.csv(&quot;https://hbiostat.org/data/repo/rhc.csv&quot;, header = TRUE) saveRDS(ObsData, file = &quot;data/rhc.RDS&quot;) 1.2 Creating Analytic data In this section, we show the process of preparing analytic data, so that the variables generally match with the way they were coded in the original article. Below we show the process of creating the analytic data. 1.2.1 Add column for outcome: length of stay # Length.of.Stay = date of discharge - study admission date # Length.of.Stay = date of death - study admission date if date of discharge not available ObsData$Length.of.Stay &lt;- ObsData$dschdte - ObsData$sadmdte ObsData$Length.of.Stay[is.na(ObsData$Length.of.Stay)] &lt;- ObsData$dthdte[is.na(ObsData$Length.of.Stay)] - ObsData$sadmdte[is.na(ObsData$Length.of.Stay)] 1.2.2 Recoding column for outcome: death ObsData$death &lt;- ifelse(ObsData$death == &quot;Yes&quot;, 1, 0) 1.2.3 Remove unnecessary outcomes ObsData &lt;- dplyr::select(ObsData, !c(dthdte, lstctdte, dschdte, t3d30, dth30, surv2md1)) 1.2.4 Remove unnecessary and problematic variables ObsData &lt;- dplyr::select(ObsData, !c(sadmdte, ptid, X, adld3p, urin1, cat2)) 1.2.5 Basic data cleanup # convert all categorical variables to factors factors &lt;- c(&quot;cat1&quot;, &quot;ca&quot;, &quot;death&quot;, &quot;cardiohx&quot;, &quot;chfhx&quot;, &quot;dementhx&quot;, &quot;psychhx&quot;, &quot;chrpulhx&quot;, &quot;renalhx&quot;, &quot;liverhx&quot;, &quot;gibledhx&quot;, &quot;malighx&quot;, &quot;immunhx&quot;, &quot;transhx&quot;, &quot;amihx&quot;, &quot;sex&quot;, &quot;dnr1&quot;, &quot;ninsclas&quot;, &quot;resp&quot;, &quot;card&quot;, &quot;neuro&quot;, &quot;gastr&quot;, &quot;renal&quot;, &quot;meta&quot;, &quot;hema&quot;, &quot;seps&quot;, &quot;trauma&quot;, &quot;ortho&quot;, &quot;race&quot;, &quot;income&quot;) ObsData[factors] &lt;- lapply(ObsData[factors], as.factor) # convert RHC.use (RHC vs. No RHC) to a binary variable ObsData$RHC.use &lt;- ifelse(ObsData$swang1 == &quot;RHC&quot;, 1, 0) ObsData &lt;- dplyr::select(ObsData, !swang1) # Categorize the variables to match with the original paper ObsData$age &lt;- cut(ObsData$age,breaks=c(-Inf, 50, 60, 70, 80, Inf),right=FALSE) ObsData$race &lt;- factor(ObsData$race, levels=c(&quot;white&quot;,&quot;black&quot;,&quot;other&quot;)) ObsData$sex &lt;- as.factor(ObsData$sex) ObsData$sex &lt;- relevel(ObsData$sex, ref = &quot;Male&quot;) ObsData$cat1 &lt;- as.factor(ObsData$cat1) levels(ObsData$cat1) &lt;- c(&quot;ARF&quot;,&quot;CHF&quot;,&quot;Other&quot;,&quot;Other&quot;,&quot;Other&quot;, &quot;Other&quot;,&quot;Other&quot;,&quot;MOSF&quot;,&quot;MOSF&quot;) ObsData$ca &lt;- as.factor(ObsData$ca) levels(ObsData$ca) &lt;- c(&quot;Metastatic&quot;,&quot;None&quot;,&quot;Localized (Yes)&quot;) ObsData$ca &lt;- factor(ObsData$ca, levels=c(&quot;None&quot;, &quot;Localized (Yes)&quot;,&quot;Metastatic&quot;)) 1.2.6 Rename variables names(ObsData) &lt;- c(&quot;Disease.category&quot;, &quot;Cancer&quot;, &quot;Death&quot;, &quot;Cardiovascular&quot;, &quot;Congestive.HF&quot;, &quot;Dementia&quot;, &quot;Psychiatric&quot;, &quot;Pulmonary&quot;, &quot;Renal&quot;, &quot;Hepatic&quot;, &quot;GI.Bleed&quot;, &quot;Tumor&quot;, &quot;Immunosupperssion&quot;, &quot;Transfer.hx&quot;, &quot;MI&quot;, &quot;age&quot;, &quot;sex&quot;, &quot;edu&quot;, &quot;DASIndex&quot;, &quot;APACHE.score&quot;, &quot;Glasgow.Coma.Score&quot;, &quot;blood.pressure&quot;, &quot;WBC&quot;, &quot;Heart.rate&quot;, &quot;Respiratory.rate&quot;, &quot;Temperature&quot;, &quot;PaO2vs.FIO2&quot;, &quot;Albumin&quot;, &quot;Hematocrit&quot;, &quot;Bilirubin&quot;, &quot;Creatinine&quot;, &quot;Sodium&quot;, &quot;Potassium&quot;, &quot;PaCo2&quot;, &quot;PH&quot;, &quot;Weight&quot;, &quot;DNR.status&quot;, &quot;Medical.insurance&quot;, &quot;Respiratory.Diag&quot;, &quot;Cardiovascular.Diag&quot;, &quot;Neurological.Diag&quot;, &quot;Gastrointestinal.Diag&quot;, &quot;Renal.Diag&quot;, &quot;Metabolic.Diag&quot;, &quot;Hematologic.Diag&quot;, &quot;Sepsis.Diag&quot;, &quot;Trauma.Diag&quot;, &quot;Orthopedic.Diag&quot;, &quot;race&quot;, &quot;income&quot;, &quot;Length.of.Stay&quot;, &quot;RHC.use&quot;) saveRDS(ObsData, file = &quot;data/rhcAnalytic.RDS&quot;) 1.3 Notations Notations Example in RHC study \\(Y_1\\): Observed outcome length of stay \\(Y_2\\): Observed outcome death within 3 months \\(L\\): Covariates See below 1.4 Basic data exploration 1.4.1 Dimension and summary dim(ObsData) ## [1] 5735 52 #str(ObsData) 1.4.2 More comprehensive summary require(skimr) ## Loading required package: skimr ## Warning: package &#39;skimr&#39; was built under R version 4.1.1 skim(ObsData) Table 1.1: Data summary Name ObsData Number of rows 5735 Number of columns 52 _______________________ Column type frequency: factor 31 numeric 21 ________________________ Group variables None Variable type: factor skim_variable n_missing complete_rate ordered n_unique top_counts Disease.category 0 1 FALSE 4 ARF: 2490, MOS: 1626, Oth: 1163, CHF: 456 Cancer 0 1 FALSE 3 Non: 4379, Loc: 972, Met: 384 Death 0 1 FALSE 2 1: 3722, 0: 2013 Cardiovascular 0 1 FALSE 2 0: 4722, 1: 1013 Congestive.HF 0 1 FALSE 2 0: 4714, 1: 1021 Dementia 0 1 FALSE 2 0: 5171, 1: 564 Psychiatric 0 1 FALSE 2 0: 5349, 1: 386 Pulmonary 0 1 FALSE 2 0: 4646, 1: 1089 Renal 0 1 FALSE 2 0: 5480, 1: 255 Hepatic 0 1 FALSE 2 0: 5334, 1: 401 GI.Bleed 0 1 FALSE 2 0: 5550, 1: 185 Tumor 0 1 FALSE 2 0: 4419, 1: 1316 Immunosupperssion 0 1 FALSE 2 0: 4192, 1: 1543 Transfer.hx 0 1 FALSE 2 0: 5073, 1: 662 MI 0 1 FALSE 2 0: 5535, 1: 200 age 0 1 FALSE 5 [-I: 1424, [60: 1389, [70: 1338, [50: 917 sex 0 1 FALSE 2 Mal: 3192, Fem: 2543 DNR.status 0 1 FALSE 2 No: 5081, Yes: 654 Medical.insurance 0 1 FALSE 6 Pri: 1698, Med: 1458, Pri: 1236, Med: 647 Respiratory.Diag 0 1 FALSE 2 No: 3622, Yes: 2113 Cardiovascular.Diag 0 1 FALSE 2 No: 3804, Yes: 1931 Neurological.Diag 0 1 FALSE 2 No: 5042, Yes: 693 Gastrointestinal.Diag 0 1 FALSE 2 No: 4793, Yes: 942 Renal.Diag 0 1 FALSE 2 No: 5440, Yes: 295 Metabolic.Diag 0 1 FALSE 2 No: 5470, Yes: 265 Hematologic.Diag 0 1 FALSE 2 No: 5381, Yes: 354 Sepsis.Diag 0 1 FALSE 2 No: 4704, Yes: 1031 Trauma.Diag 0 1 FALSE 2 No: 5683, Yes: 52 Orthopedic.Diag 0 1 FALSE 2 No: 5728, Yes: 7 race 0 1 FALSE 3 whi: 4460, bla: 920, oth: 355 income 0 1 FALSE 4 Und: 3226, $11: 1165, $25: 893, &gt; $: 451 Variable type: numeric skim_variable n_missing complete_rate mean sd p0 p25 p50 p75 p100 hist edu 0 1 11.68 3.15 0.00 10.00 12.00 13.00 30.00  DASIndex 0 1 20.50 5.32 11.00 16.06 19.75 23.43 33.00  APACHE.score 0 1 54.67 19.96 3.00 41.00 54.00 67.00 147.00  Glasgow.Coma.Score 0 1 21.00 30.27 0.00 0.00 0.00 41.00 100.00  blood.pressure 0 1 78.52 38.05 0.00 50.00 63.00 115.00 259.00  WBC 0 1 15.65 11.87 0.00 8.40 14.10 20.05 192.00  Heart.rate 0 1 115.18 41.24 0.00 97.00 124.00 141.00 250.00  Respiratory.rate 0 1 28.09 14.08 0.00 14.00 30.00 38.00 100.00  Temperature 0 1 37.62 1.77 27.00 36.09 38.09 39.00 43.00  PaO2vs.FIO2 0 1 222.27 114.95 11.60 133.31 202.50 316.62 937.50  Albumin 0 1 3.09 0.78 0.30 2.60 3.50 3.50 29.00  Hematocrit 0 1 31.87 8.36 2.00 26.10 30.00 36.30 66.19  Bilirubin 0 1 2.27 4.80 0.10 0.80 1.01 1.40 58.20  Creatinine 0 1 2.13 2.05 0.10 1.00 1.50 2.40 25.10  Sodium 0 1 136.77 7.66 101.00 132.00 136.00 142.00 178.00  Potassium 0 1 4.07 1.03 1.10 3.40 3.80 4.60 11.90  PaCo2 0 1 38.75 13.18 1.00 31.00 37.00 42.00 156.00  PH 0 1 7.39 0.11 6.58 7.34 7.40 7.46 7.77  Weight 0 1 67.83 29.06 0.00 56.30 70.00 83.70 244.00  Length.of.Stay 0 1 21.56 25.87 2.00 7.00 14.00 25.00 394.00  RHC.use 0 1 0.38 0.49 0.00 0.00 0.00 1.00 1.00  #require(rms) #describe(ObsData) References "],["prediction-from-continuous-outcome.html", "Chapter 2 Prediction from continuous outcome 2.1 Read previously saved data 2.2 Prediction for length of stay 2.3 Variables 2.4 Model 2.5 Measuring prediction error", " Chapter 2 Prediction from continuous outcome 2.1 Read previously saved data ObsData &lt;- readRDS(file = &quot;data/rhcAnalytic.RDS&quot;) 2.2 Prediction for length of stay In this section, we show the regression fitting when outcome is continuous (length of stay). 2.3 Variables baselinevars &lt;- names(dplyr::select(ObsData, !c(Length.of.Stay,Death))) baselinevars ## [1] &quot;Disease.category&quot; &quot;Cancer&quot; &quot;Cardiovascular&quot; ## [4] &quot;Congestive.HF&quot; &quot;Dementia&quot; &quot;Psychiatric&quot; ## [7] &quot;Pulmonary&quot; &quot;Renal&quot; &quot;Hepatic&quot; ## [10] &quot;GI.Bleed&quot; &quot;Tumor&quot; &quot;Immunosupperssion&quot; ## [13] &quot;Transfer.hx&quot; &quot;MI&quot; &quot;age&quot; ## [16] &quot;sex&quot; &quot;edu&quot; &quot;DASIndex&quot; ## [19] &quot;APACHE.score&quot; &quot;Glasgow.Coma.Score&quot; &quot;blood.pressure&quot; ## [22] &quot;WBC&quot; &quot;Heart.rate&quot; &quot;Respiratory.rate&quot; ## [25] &quot;Temperature&quot; &quot;PaO2vs.FIO2&quot; &quot;Albumin&quot; ## [28] &quot;Hematocrit&quot; &quot;Bilirubin&quot; &quot;Creatinine&quot; ## [31] &quot;Sodium&quot; &quot;Potassium&quot; &quot;PaCo2&quot; ## [34] &quot;PH&quot; &quot;Weight&quot; &quot;DNR.status&quot; ## [37] &quot;Medical.insurance&quot; &quot;Respiratory.Diag&quot; &quot;Cardiovascular.Diag&quot; ## [40] &quot;Neurological.Diag&quot; &quot;Gastrointestinal.Diag&quot; &quot;Renal.Diag&quot; ## [43] &quot;Metabolic.Diag&quot; &quot;Hematologic.Diag&quot; &quot;Sepsis.Diag&quot; ## [46] &quot;Trauma.Diag&quot; &quot;Orthopedic.Diag&quot; &quot;race&quot; ## [49] &quot;income&quot; &quot;RHC.use&quot; 2.4 Model # adjust covariates out.formula1 &lt;- as.formula(paste(&quot;Length.of.Stay~ &quot;, paste(baselinevars, collapse = &quot;+&quot;))) saveRDS(out.formula1, file = &quot;data/form1.RDS&quot;) fit1 &lt;- lm(out.formula1, data = ObsData) require(Publish) adj.fit1 &lt;- publish(fit1, digits=1)$regressionTable out.formula1 ## Length.of.Stay ~ Disease.category + Cancer + Cardiovascular + ## Congestive.HF + Dementia + Psychiatric + Pulmonary + Renal + ## Hepatic + GI.Bleed + Tumor + Immunosupperssion + Transfer.hx + ## MI + age + sex + edu + DASIndex + APACHE.score + Glasgow.Coma.Score + ## blood.pressure + WBC + Heart.rate + Respiratory.rate + Temperature + ## PaO2vs.FIO2 + Albumin + Hematocrit + Bilirubin + Creatinine + ## Sodium + Potassium + PaCo2 + PH + Weight + DNR.status + Medical.insurance + ## Respiratory.Diag + Cardiovascular.Diag + Neurological.Diag + ## Gastrointestinal.Diag + Renal.Diag + Metabolic.Diag + Hematologic.Diag + ## Sepsis.Diag + Trauma.Diag + Orthopedic.Diag + race + income + ## RHC.use adj.fit1 ## Variable Units Coefficient CI.95 p-value ## 1 (Intercept) -76.8 [-139.4;-14.2] &lt;0.1 ## 2 Disease.category ARF Ref ## 3 CHF -5.6 [-9.0;-2.2] &lt;0.1 ## 4 Other -4.4 [-6.5;-2.3] &lt;0.1 ## 5 MOSF 2.9 [1.1;4.7] &lt;0.1 ## 6 Cancer None Ref ## 7 Localized (Yes) -7.8 [-15.7;0.1] &lt;0.1 ## 8 Metastatic -10.6 [-19.1;-2.1] &lt;0.1 ## 9 Cardiovascular 0 Ref ## 10 1 0.7 [-1.3;2.7] 0.5 ## 11 Congestive.HF 0 Ref ## 12 1 -1.8 [-3.9;0.4] 0.1 ## 13 Dementia 0 Ref ## 14 1 -1.3 [-3.6;1.1] 0.3 ## 15 Psychiatric 0 Ref ## 16 1 -0.5 [-3.1;2.2] 0.7 ## 17 Pulmonary 0 Ref ## 18 1 2.1 [0.1;4.0] &lt;0.1 ## 19 Renal 0 Ref ## 20 1 -6.9 [-10.8;-3.1] &lt;0.1 ## 21 Hepatic 0 Ref ## 22 1 -1.5 [-5.1;2.1] 0.4 ## 23 GI.Bleed 0 Ref ## 24 1 -5.1 [-9.7;-0.5] &lt;0.1 ## 25 Tumor 0 Ref ## 26 1 4.6 [-3.4;12.6] 0.3 ## 27 Immunosupperssion 0 Ref ## 28 1 0.1 [-1.4;1.7] 0.9 ## 29 Transfer.hx 0 Ref ## 30 1 1.2 [-0.9;3.2] 0.3 ## 31 MI 0 Ref ## 32 1 -1.7 [-5.3;2.0] 0.4 ## 33 age [-Inf,50) Ref ## 34 [50,60) 0.1 [-2.0;2.3] 0.9 ## 35 [60,70) -0.4 [-2.5;1.7] 0.7 ## 36 [70,80) -1.1 [-3.6;1.4] 0.4 ## 37 [80, Inf) -2.8 [-5.7;0.2] &lt;0.1 ## 38 sex Male Ref ## 39 Female 0.8 [-0.6;2.2] 0.2 ## 40 edu 0.0 [-0.2;0.3] 0.7 ## 41 DASIndex -0.1 [-0.2;0.1] 0.4 ## 42 APACHE.score -0.1 [-0.1;-0.0] &lt;0.1 ## 43 Glasgow.Coma.Score 0.0 [-0.0;0.0] 0.2 ## 44 blood.pressure -0.0 [-0.0;0.0] 0.2 ## 45 WBC 0.0 [-0.0;0.1] 0.2 ## 46 Heart.rate 0.0 [0.0;0.0] &lt;0.1 ## 47 Respiratory.rate -0.0 [-0.1;0.1] 1.0 ## 48 Temperature 0.5 [0.1;0.9] &lt;0.1 ## 49 PaO2vs.FIO2 -0.0 [-0.0;-0.0] &lt;0.1 ## 50 Albumin -2.6 [-3.5;-1.6] &lt;0.1 ## 51 Hematocrit -0.2 [-0.3;-0.1] &lt;0.1 ## 52 Bilirubin -0.1 [-0.3;0.1] 0.2 ## 53 Creatinine 0.5 [0.1;1.0] &lt;0.1 ## 54 Sodium 0.1 [0.0;0.2] &lt;0.1 ## 55 Potassium 0.3 [-0.3;1.0] 0.3 ## 56 PaCo2 0.1 [0.0;0.2] &lt;0.1 ## 57 PH 10.1 [2.2;17.9] &lt;0.1 ## 58 Weight 0.0 [-0.0;0.0] 1.0 ## 59 DNR.status No Ref ## 60 Yes -8.0 [-10.1;-5.8] &lt;0.1 ## 61 Medical.insurance Medicaid Ref ## 62 Medicare -0.5 [-3.2;2.2] 0.7 ## 63 Medicare &amp; Medicaid -2.4 [-5.8;0.9] 0.2 ## 64 No insurance -1.8 [-5.2;1.6] 0.3 ## 65 Private -2.1 [-4.6;0.4] 0.1 ## 66 Private &amp; Medicare -2.0 [-4.8;0.8] 0.2 ## 67 Respiratory.Diag No Ref ## 68 Yes 0.3 [-1.4;2.0] 0.7 ## 69 Cardiovascular.Diag No Ref ## 70 Yes 0.4 [-1.4;2.1] 0.7 ## 71 Neurological.Diag No Ref ## 72 Yes 3.5 [1.1;6.0] &lt;0.1 ## 73 Gastrointestinal.Diag No Ref ## 74 Yes 2.6 [0.3;4.8] &lt;0.1 ## 75 Renal.Diag No Ref ## 76 Yes 1.8 [-1.4;5.0] 0.3 ## 77 Metabolic.Diag No Ref ## 78 Yes -1.2 [-4.3;2.0] 0.5 ## 79 Hematologic.Diag No Ref ## 80 Yes -3.9 [-6.8;-0.9] &lt;0.1 ## 81 Sepsis.Diag No Ref ## 82 Yes 0.0 [-2.0;2.0] 1.0 ## 83 Trauma.Diag No Ref ## 84 Yes 1.1 [-5.9;8.2] 0.8 ## 85 Orthopedic.Diag No Ref ## 86 Yes 3.5 [-15.1;22.2] 0.7 ## 87 race white Ref ## 88 black -1.1 [-3.1;0.8] 0.2 ## 89 other 0.2 [-2.5;3.0] 0.9 ## 90 income $11-$25k Ref ## 91 $25-$50k 2.5 [0.2;4.7] &lt;0.1 ## 92 &gt; $50k 0.4 [-2.4;3.3] 0.8 ## 93 Under $11k -0.4 [-2.2;1.4] 0.6 ## 94 RHC.use 2.9 [1.4;4.4] &lt;0.1 2.4.1 Design Matrix Expands factors to a set of dummy variables. dim(ObsData) ## [1] 5735 52 length(attr(terms(out.formula1), &quot;term.labels&quot;)) ## [1] 50 head(model.matrix(fit1)) ## (Intercept) Disease.categoryCHF Disease.categoryOther Disease.categoryMOSF ## 1 1 0 1 0 ## 2 1 0 0 1 ## 3 1 0 0 1 ## 4 1 0 0 0 ## 5 1 0 0 1 ## 6 1 0 1 0 ## CancerLocalized (Yes) CancerMetastatic Cardiovascular1 Congestive.HF1 ## 1 1 0 0 0 ## 2 0 0 1 1 ## 3 1 0 0 0 ## 4 0 0 0 0 ## 5 0 0 0 0 ## 6 0 0 0 1 ## Dementia1 Psychiatric1 Pulmonary1 Renal1 Hepatic1 GI.Bleed1 Tumor1 ## 1 0 0 1 0 0 0 1 ## 2 0 0 0 0 0 0 0 ## 3 0 0 0 0 0 0 1 ## 4 0 0 0 0 0 0 0 ## 5 0 0 0 0 0 0 0 ## 6 0 0 1 0 0 0 0 ## Immunosupperssion1 Transfer.hx1 MI1 age[50,60) age[60,70) age[70,80) ## 1 0 0 0 0 0 1 ## 2 1 1 0 0 0 1 ## 3 1 0 0 0 0 0 ## 4 1 0 0 0 0 1 ## 5 0 0 0 0 1 0 ## 6 0 0 0 0 0 0 ## age[80, Inf) sexFemale edu DASIndex APACHE.score Glasgow.Coma.Score ## 1 0 0 12.000000 23.50000 46 0 ## 2 0 1 12.000000 14.75195 50 0 ## 3 0 1 14.069916 18.13672 82 0 ## 4 0 1 9.000000 22.92969 48 0 ## 5 0 0 9.945259 21.05078 72 41 ## 6 1 1 8.000000 17.50000 38 0 ## blood.pressure WBC Heart.rate Respiratory.rate Temperature ## 1 41 22.09765620 124 10 38.69531 ## 2 63 28.89843750 137 38 38.89844 ## 3 57 0.04999542 130 40 36.39844 ## 4 55 23.29687500 58 26 35.79688 ## 5 65 29.69921880 125 27 34.79688 ## 6 115 18.00000000 134 36 39.19531 ## PaO2vs.FIO2 Albumin Hematocrit Bilirubin Creatinine Sodium Potassium PaCo2 ## 1 68.0000 3.500000 58.00000 1.0097656 1.1999512 145 4.000000 40 ## 2 218.3125 2.599609 32.50000 0.6999512 0.5999756 137 3.299805 34 ## 3 275.5000 3.500000 21.09766 1.0097656 2.5996094 146 2.899902 16 ## 4 156.6562 3.500000 26.29688 0.3999634 1.6999512 117 5.799805 30 ## 5 478.0000 3.500000 24.00000 1.0097656 3.5996094 126 5.799805 17 ## 6 184.1875 3.099609 30.50000 1.0097656 1.3999023 138 5.399414 68 ## PH Weight DNR.statusYes Medical.insuranceMedicare ## 1 7.359375 64.69995 0 1 ## 2 7.329102 45.69998 0 0 ## 3 7.359375 0.00000 0 0 ## 4 7.459961 54.59998 0 0 ## 5 7.229492 78.39996 1 1 ## 6 7.299805 54.89999 0 1 ## Medical.insuranceMedicare &amp; Medicaid Medical.insuranceNo insurance ## 1 0 0 ## 2 0 0 ## 3 0 0 ## 4 0 0 ## 5 0 0 ## 6 0 0 ## Medical.insurancePrivate Medical.insurancePrivate &amp; Medicare ## 1 0 0 ## 2 0 1 ## 3 1 0 ## 4 0 1 ## 5 0 0 ## 6 0 0 ## Respiratory.DiagYes Cardiovascular.DiagYes Neurological.DiagYes ## 1 1 1 0 ## 2 0 0 0 ## 3 0 1 0 ## 4 1 0 0 ## 5 0 1 0 ## 6 1 0 0 ## Gastrointestinal.DiagYes Renal.DiagYes Metabolic.DiagYes Hematologic.DiagYes ## 1 0 0 0 0 ## 2 0 0 0 0 ## 3 0 0 0 0 ## 4 0 0 0 0 ## 5 0 0 0 0 ## 6 0 0 0 0 ## Sepsis.DiagYes Trauma.DiagYes Orthopedic.DiagYes raceblack raceother ## 1 0 0 0 0 0 ## 2 1 0 0 0 0 ## 3 0 0 0 0 0 ## 4 0 0 0 0 0 ## 5 0 0 0 0 0 ## 6 0 0 0 0 0 ## income$25-$50k income&gt; $50k incomeUnder $11k RHC.use ## 1 0 0 1 0 ## 2 0 0 1 1 ## 3 1 0 0 1 ## 4 0 0 0 0 ## 5 0 0 1 1 ## 6 0 0 1 0 dim(model.matrix(fit1)) ## [1] 5735 64 p &lt;- dim(model.matrix(fit1))[2] # intercept + slopes p ## [1] 64 2.4.2 Obtain prediction obs.y &lt;- ObsData$Length.of.Stay summary(obs.y) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 2.00 7.00 14.00 21.56 25.00 394.00 # Predict the above fit on ObsData data pred.y1 &lt;- predict(fit1, ObsData) summary(pred.y1) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## -32.76 16.62 21.96 21.56 26.73 42.67 n &lt;- length(pred.y1) n ## [1] 5735 plot(obs.y,pred.y1) lines(lowess(obs.y,pred.y1), col = &quot;red&quot;) 2.5 Measuring prediction error 2.5.1 R2 ref # Find SSE SSE &lt;- sum( (obs.y - pred.y1)^2 ) SSE ## [1] 3536398 # Find SST mean.obs.y &lt;- mean(obs.y) SST &lt;- sum( (obs.y - mean.obs.y)^2 ) SST ## [1] 3836690 # Find R2 R.2 &lt;- 1- SSE/SST R.2 ## [1] 0.07826832 require(caret) R2(pred.y1, obs.y) ## [1] 0.07826832 2.5.2 RMSE ref # Find RMSE Rmse &lt;- sqrt(SSE/(n-p)) Rmse ## [1] 24.97185 RMSE(pred.y1, obs.y) ## [1] 24.83212 2.5.3 Adj R2 ref # Find adj R2 adjR2 &lt;- 1-(1-R.2)*((n-1)/(n-p)) adjR2 ## [1] 0.06802866 "],["data-spliting.html", "Chapter 3 Data spliting 3.1 Read previously saved data 3.2 Split the data 3.3 Train the model 3.4 Extract performance measures", " Chapter 3 Data spliting 3.1 Read previously saved data ObsData &lt;- readRDS(file = &quot;data/rhcAnalytic.RDS&quot;) ref ref # Using a seed to randomize in a reproducible way set.seed(123) require(caret) split&lt;-createDataPartition(y = ObsData$Length.of.Stay, p = 0.7, list = FALSE) str(split) ## int [1:4017, 1] 1 2 3 4 5 6 7 8 9 10 ... ## - attr(*, &quot;dimnames&quot;)=List of 2 ## ..$ : NULL ## ..$ : chr &quot;Resample1&quot; dim(split) ## [1] 4017 1 dim(ObsData)*.7 # approximate train data ## [1] 4014.5 36.4 dim(ObsData)*(1-.7) # approximate train data ## [1] 1720.5 15.6 3.2 Split the data # create train data train.data&lt;-ObsData[split,] dim(train.data) ## [1] 4017 52 # create test data test.data&lt;-ObsData[-split,] dim(test.data) ## [1] 1718 52 3.3 Train the model out.formula1 &lt;- readRDS(file = &quot;data/form1.RDS&quot;) out.formula1 ## Length.of.Stay ~ Disease.category + Cancer + Cardiovascular + ## Congestive.HF + Dementia + Psychiatric + Pulmonary + Renal + ## Hepatic + GI.Bleed + Tumor + Immunosupperssion + Transfer.hx + ## MI + age + sex + edu + DASIndex + APACHE.score + Glasgow.Coma.Score + ## blood.pressure + WBC + Heart.rate + Respiratory.rate + Temperature + ## PaO2vs.FIO2 + Albumin + Hematocrit + Bilirubin + Creatinine + ## Sodium + Potassium + PaCo2 + PH + Weight + DNR.status + Medical.insurance + ## Respiratory.Diag + Cardiovascular.Diag + Neurological.Diag + ## Gastrointestinal.Diag + Renal.Diag + Metabolic.Diag + Hematologic.Diag + ## Sepsis.Diag + Trauma.Diag + Orthopedic.Diag + race + income + ## RHC.use fit.train1&lt;-lm(out.formula1, data = train.data) # summary(fit.train1) 3.3.1 Function that gives performance measures perform &lt;- function(new.data, model.fit,model.formula=NULL, y.name = &quot;Y&quot;, digits=3){ # data dimension p &lt;- dim(model.matrix(model.fit))[2] # predicted value pred.y &lt;- predict(model.fit, new.data) # sample size n &lt;- length(pred.y) # outcome new.data.y &lt;- as.numeric(new.data[,y.name]) # R2 R2 &lt;- caret:::R2(pred.y, new.data.y) # adj R2 using alternate formula df.residual &lt;- n-p adjR2 &lt;- 1-(1-R2)*((n-1)/df.residual) # RMSE RMSE &lt;- caret:::RMSE(pred.y, new.data.y) # combine all of the results res &lt;- round(cbind(n,p,R2,adjR2,RMSE),digits) # returning object return(res) } 3.4 Extract performance measures perform(new.data=train.data,y.name = &quot;Length.of.Stay&quot;,model.fit=fit.train1) ## n p R2 adjR2 RMSE ## [1,] 4017 64 0.081 0.067 24.647 perform(new.data=test.data,y.name = &quot;Length.of.Stay&quot;,model.fit=fit.train1) ## n p R2 adjR2 RMSE ## [1,] 1718 64 0.056 0.02 25.488 perform(new.data=ObsData,y.name = &quot;Length.of.Stay&quot;,model.fit=fit.train1) ## n p R2 adjR2 RMSE ## [1,] 5735 64 0.073 0.063 24.902 "],["cross-validation.html", "Chapter 4 Cross-validation 4.1 Read previously saved data 4.2 k-fold cross-vaildation 4.3 Using caret package to automate", " Chapter 4 Cross-validation 4.1 Read previously saved data ObsData &lt;- readRDS(file = &quot;data/rhcAnalytic.RDS&quot;) out.formula1 &lt;- readRDS(file = &quot;data/form1.RDS&quot;) 4.2 k-fold cross-vaildation ref k = 5 dim(ObsData) ## [1] 5735 52 set.seed(567) # create folds (based on outcome) folds &lt;- createFolds(ObsData$Length.of.Stay, k = k, list = TRUE, returnTrain = TRUE) mode(folds) ## [1] &quot;list&quot; dim(ObsData)*4/5 # approximate training data size ## [1] 4588.0 41.6 dim(ObsData)/5 # approximate test data size ## [1] 1147.0 10.4 length(folds[[1]]) ## [1] 4588 length(folds[[5]]) ## [1] 4587 str(folds[[1]]) ## int [1:4588] 1 2 4 6 7 8 9 10 11 13 ... str(folds[[5]]) ## int [1:4587] 1 3 5 6 7 8 10 11 12 13 ... 4.2.1 Calculation for Fold 1 fold.index &lt;- 1 fold1.train.ids &lt;- folds[[fold.index]] head(fold1.train.ids) ## [1] 1 2 4 6 7 8 fold1.train &lt;- ObsData[fold1.train.ids,] fold1.test &lt;- ObsData[-fold1.train.ids,] out.formula1 ## Length.of.Stay ~ Disease.category + Cancer + Cardiovascular + ## Congestive.HF + Dementia + Psychiatric + Pulmonary + Renal + ## Hepatic + GI.Bleed + Tumor + Immunosupperssion + Transfer.hx + ## MI + age + sex + edu + DASIndex + APACHE.score + Glasgow.Coma.Score + ## blood.pressure + WBC + Heart.rate + Respiratory.rate + Temperature + ## PaO2vs.FIO2 + Albumin + Hematocrit + Bilirubin + Creatinine + ## Sodium + Potassium + PaCo2 + PH + Weight + DNR.status + Medical.insurance + ## Respiratory.Diag + Cardiovascular.Diag + Neurological.Diag + ## Gastrointestinal.Diag + Renal.Diag + Metabolic.Diag + Hematologic.Diag + ## Sepsis.Diag + Trauma.Diag + Orthopedic.Diag + race + income + ## RHC.use model.fit &lt;- lm(out.formula1, data = fold1.train) predictions &lt;- predict(model.fit, newdata = fold1.test) perform(new.data=fold1.test, y.name = &quot;Length.of.Stay&quot;, model.fit=model.fit) ## n p R2 adjR2 RMSE ## [1,] 1147 64 0.051 -0.004 24.86 4.2.2 Calculation for Fold 2 fold.index &lt;- 2 fold1.train.ids &lt;- folds[[fold.index]] head(fold1.train.ids) ## [1] 2 3 4 5 6 7 fold1.train &lt;- ObsData[fold1.train.ids,] fold1.test &lt;- ObsData[-fold1.train.ids,] model.fit &lt;- lm(out.formula1, data = fold1.train) predictions &lt;- predict(model.fit, newdata = fold1.test) perform(new.data=fold1.test, y.name = &quot;Length.of.Stay&quot;, model.fit=model.fit) ## n p R2 adjR2 RMSE ## [1,] 1147 64 0.066 0.011 24.714 4.3 Using caret package to automate ref # Using Caret package set.seed(504) # make a 5-fold CV ctrl&lt;-trainControl(method = &quot;cv&quot;,number = 5) # fit the model with formula = out.formula1 # use training method lm fit.cv&lt;-train(out.formula1, trControl = ctrl, data = ObsData, method = &quot;lm&quot;) fit.cv ## Linear Regression ## ## 5735 samples ## 50 predictor ## ## No pre-processing ## Resampling: Cross-Validated (5 fold) ## Summary of sample sizes: 4588, 4588, 4587, 4589, 4588 ## Resampling results: ## ## RMSE Rsquared MAE ## 25.05478 0.05980578 15.19515 ## ## Tuning parameter &#39;intercept&#39; was held constant at a value of TRUE # extract results from each test data summary.res &lt;- fit.cv$resample summary.res ## RMSE Rsquared MAE Resample ## 1 22.45199 0.06463766 14.52080 Fold1 ## 2 27.05869 0.06799916 15.29290 Fold2 ## 3 27.65794 0.06034484 15.51895 Fold3 ## 4 24.55357 0.03892546 15.47073 Fold4 ## 5 23.55174 0.06712180 15.17238 Fold5 mean(fit.cv$resample$Rsquared) ## [1] 0.05980578 sd(fit.cv$resample$Rsquared) ## [1] 0.01204451 mean(fit.cv$resample$RMSE) ## [1] 25.05478 sd(fit.cv$resample$RMSE) ## [1] 2.240366 "],["prediction-from-continuous-outcome-1.html", "Chapter 5 Prediction from continuous outcome 5.1 Read previously saved data 5.2 Outcome levels (factor) 5.3 Variables 5.4 Model 5.5 Measuring prediction error 5.6 Cross-validation using caret", " Chapter 5 Prediction from continuous outcome 5.1 Read previously saved data ObsData &lt;- readRDS(file = &quot;data/rhcAnalytic.RDS&quot;) 5.2 Outcome levels (factor) levels(ObsData$Death)=c(&quot;No&quot;,&quot;Yes&quot;) # this is useful for caret # ref: https://tinyurl.com/caretbin class(ObsData$Death) ## [1] &quot;factor&quot; table(ObsData$Death) ## ## No Yes ## 2013 3722 5.2.1 Prediction for death In this section, we show the regression fitting when outcome is binary (death). 5.3 Variables baselinevars &lt;- names(dplyr::select(ObsData, !c(Length.of.Stay,Death))) baselinevars ## [1] &quot;Disease.category&quot; &quot;Cancer&quot; &quot;Cardiovascular&quot; ## [4] &quot;Congestive.HF&quot; &quot;Dementia&quot; &quot;Psychiatric&quot; ## [7] &quot;Pulmonary&quot; &quot;Renal&quot; &quot;Hepatic&quot; ## [10] &quot;GI.Bleed&quot; &quot;Tumor&quot; &quot;Immunosupperssion&quot; ## [13] &quot;Transfer.hx&quot; &quot;MI&quot; &quot;age&quot; ## [16] &quot;sex&quot; &quot;edu&quot; &quot;DASIndex&quot; ## [19] &quot;APACHE.score&quot; &quot;Glasgow.Coma.Score&quot; &quot;blood.pressure&quot; ## [22] &quot;WBC&quot; &quot;Heart.rate&quot; &quot;Respiratory.rate&quot; ## [25] &quot;Temperature&quot; &quot;PaO2vs.FIO2&quot; &quot;Albumin&quot; ## [28] &quot;Hematocrit&quot; &quot;Bilirubin&quot; &quot;Creatinine&quot; ## [31] &quot;Sodium&quot; &quot;Potassium&quot; &quot;PaCo2&quot; ## [34] &quot;PH&quot; &quot;Weight&quot; &quot;DNR.status&quot; ## [37] &quot;Medical.insurance&quot; &quot;Respiratory.Diag&quot; &quot;Cardiovascular.Diag&quot; ## [40] &quot;Neurological.Diag&quot; &quot;Gastrointestinal.Diag&quot; &quot;Renal.Diag&quot; ## [43] &quot;Metabolic.Diag&quot; &quot;Hematologic.Diag&quot; &quot;Sepsis.Diag&quot; ## [46] &quot;Trauma.Diag&quot; &quot;Orthopedic.Diag&quot; &quot;race&quot; ## [49] &quot;income&quot; &quot;RHC.use&quot; 5.4 Model # adjust covariates out.formula2 &lt;- as.formula(paste(&quot;Death~ &quot;, paste(baselinevars, collapse = &quot;+&quot;))) fit2 &lt;- glm(out.formula2, data = ObsData, family = binomial(link = &quot;logit&quot;)) require(Publish) adj.fit2 &lt;- publish(fit2, digits=1)$regressionTable out.formula2 ## Death ~ Disease.category + Cancer + Cardiovascular + Congestive.HF + ## Dementia + Psychiatric + Pulmonary + Renal + Hepatic + GI.Bleed + ## Tumor + Immunosupperssion + Transfer.hx + MI + age + sex + ## edu + DASIndex + APACHE.score + Glasgow.Coma.Score + blood.pressure + ## WBC + Heart.rate + Respiratory.rate + Temperature + PaO2vs.FIO2 + ## Albumin + Hematocrit + Bilirubin + Creatinine + Sodium + ## Potassium + PaCo2 + PH + Weight + DNR.status + Medical.insurance + ## Respiratory.Diag + Cardiovascular.Diag + Neurological.Diag + ## Gastrointestinal.Diag + Renal.Diag + Metabolic.Diag + Hematologic.Diag + ## Sepsis.Diag + Trauma.Diag + Orthopedic.Diag + race + income + ## RHC.use adj.fit2 ## Variable Units OddsRatio CI.95 p-value ## 1 Disease.category ARF Ref ## 2 CHF 1.0 [0.8;1.4] 0.8 ## 3 Other 1.6 [1.3;2.0] &lt;0.1 ## 4 MOSF 1.0 [0.9;1.2] 0.7 ## 5 Cancer None Ref ## 6 Localized (Yes) 6.6 [2.2;19.4] &lt;0.1 ## 7 Metastatic 26.4 [8.3;83.6] &lt;0.1 ## 8 Cardiovascular 0 Ref ## 9 1 1.3 [1.0;1.5] &lt;0.1 ## 10 Congestive.HF 0 Ref ## 11 1 1.6 [1.3;1.9] &lt;0.1 ## 12 Dementia 0 Ref ## 13 1 1.3 [1.0;1.6] &lt;0.1 ## 14 Psychiatric 0 Ref ## 15 1 0.9 [0.7;1.2] 0.6 ## 16 Pulmonary 0 Ref ## 17 1 1.0 [0.9;1.2] 0.7 ## 18 Renal 0 Ref ## 19 1 1.3 [0.9;1.9] 0.2 ## 20 Hepatic 0 Ref ## 21 1 1.3 [0.9;1.8] 0.1 ## 22 GI.Bleed 0 Ref ## 23 1 1.2 [0.8;1.9] 0.3 ## 24 Tumor 0 Ref ## 25 1 0.3 [0.1;0.9] &lt;0.1 ## 26 Immunosupperssion 0 Ref ## 27 1 1.2 [1.1;1.4] &lt;0.1 ## 28 Transfer.hx 0 Ref ## 29 1 0.8 [0.7;1.0] &lt;0.1 ## 30 MI 0 Ref ## 31 1 0.8 [0.6;1.2] 0.3 ## 32 age [-Inf,50) Ref ## 33 [50,60) 1.4 [1.2;1.8] &lt;0.1 ## 34 [60,70) 2.1 [1.7;2.5] &lt;0.1 ## 35 [70,80) 2.1 [1.6;2.6] &lt;0.1 ## 36 [80, Inf) 2.8 [2.1;3.8] &lt;0.1 ## 37 sex Male Ref ## 38 Female 0.8 [0.7;0.9] &lt;0.1 ## 39 edu 1.0 [1.0;1.0] 0.4 ## 40 DASIndex 1.0 [0.9;1.0] &lt;0.1 ## 41 APACHE.score 1.0 [1.0;1.0] &lt;0.1 ## 42 Glasgow.Coma.Score 1.0 [1.0;1.0] &lt;0.1 ## 43 blood.pressure 1.0 [1.0;1.0] 0.4 ## 44 WBC 1.0 [1.0;1.0] 0.2 ## 45 Heart.rate 1.0 [1.0;1.0] 0.7 ## 46 Respiratory.rate 1.0 [1.0;1.0] 0.8 ## 47 Temperature 0.9 [0.9;1.0] &lt;0.1 ## 48 PaO2vs.FIO2 1.0 [1.0;1.0] 0.3 ## 49 Albumin 1.0 [0.9;1.1] 0.6 ## 50 Hematocrit 1.0 [1.0;1.0] &lt;0.1 ## 51 Bilirubin 1.0 [1.0;1.1] &lt;0.1 ## 52 Creatinine 1.0 [1.0;1.0] 0.9 ## 53 Sodium 1.0 [1.0;1.0] 0.7 ## 54 Potassium 1.0 [0.9;1.1] 0.9 ## 55 PaCo2 1.0 [1.0;1.0] 0.3 ## 56 PH 1.1 [0.5;2.3] 0.9 ## 57 Weight 1.0 [1.0;1.0] &lt;0.1 ## 58 DNR.status No Ref ## 59 Yes 2.6 [2.0;3.3] &lt;0.1 ## 60 Medical.insurance Medicaid Ref ## 61 Medicare 1.6 [1.2;2.0] &lt;0.1 ## 62 Medicare &amp; Medicaid 1.4 [1.0;1.9] &lt;0.1 ## 63 No insurance 1.5 [1.1;2.0] &lt;0.1 ## 64 Private 1.3 [1.1;1.7] &lt;0.1 ## 65 Private &amp; Medicare 1.3 [1.0;1.7] &lt;0.1 ## 66 Respiratory.Diag No Ref ## 67 Yes 1.2 [1.0;1.4] &lt;0.1 ## 68 Cardiovascular.Diag No Ref ## 69 Yes 1.2 [1.0;1.4] &lt;0.1 ## 70 Neurological.Diag No Ref ## 71 Yes 1.5 [1.2;1.9] &lt;0.1 ## 72 Gastrointestinal.Diag No Ref ## 73 Yes 1.3 [1.1;1.6] &lt;0.1 ## 74 Renal.Diag No Ref ## 75 Yes 0.8 [0.6;1.1] 0.2 ## 76 Metabolic.Diag No Ref ## 77 Yes 1.0 [0.8;1.4] 0.8 ## 78 Hematologic.Diag No Ref ## 79 Yes 2.7 [2.0;3.8] &lt;0.1 ## 80 Sepsis.Diag No Ref ## 81 Yes 1.1 [0.9;1.4] 0.2 ## 82 Trauma.Diag No Ref ## 83 Yes 0.8 [0.4;1.4] 0.4 ## 84 Orthopedic.Diag No Ref ## 85 Yes 1.4 [0.2;8.1] 0.7 ## 86 race white Ref ## 87 black 1.0 [0.8;1.2] 0.9 ## 88 other 1.1 [0.8;1.4] 0.7 ## 89 income $11-$25k Ref ## 90 $25-$50k 0.8 [0.7;1.0] &lt;0.1 ## 91 &gt; $50k 0.8 [0.6;1.1] 0.2 ## 92 Under $11k 1.2 [1.0;1.4] &lt;0.1 ## 93 RHC.use 1.4 [1.2;1.6] &lt;0.1 5.5 Measuring prediction error 5.5.1 AUC require(pROC) obs.y2&lt;-ObsData$Death pred.y2 &lt;- predict(fit2, type = &quot;response&quot;) rocobj &lt;- roc(obs.y2, pred.y2) ## Setting levels: control = No, case = Yes ## Setting direction: controls &lt; cases rocobj ## ## Call: ## roc.default(response = obs.y2, predictor = pred.y2) ## ## Data: pred.y2 in 2013 controls (obs.y2 No) &lt; 3722 cases (obs.y2 Yes). ## Area under the curve: 0.7682 plot(rocobj) auc(rocobj) ## Area under the curve: 0.7682 5.5.2 Brier Score require(DescTools) BrierScore(fit2) ## [1] 0.1812502 5.6 Cross-validation using caret # Using Caret package set.seed(504) # make a 5-fold CV require(caret) ctrl&lt;-trainControl(method = &quot;cv&quot;, number = 5, classProbs = TRUE, summaryFunction = twoClassSummary) # fit the model with formula = out.formula2 # use training method glm (have to specify family) fit.cv.bin&lt;-train(out.formula2, trControl = ctrl, data = ObsData, method = &quot;glm&quot;, family = binomial(), metric=&quot;ROC&quot;) fit.cv.bin ## Generalized Linear Model ## ## 5735 samples ## 50 predictor ## 2 classes: &#39;No&#39;, &#39;Yes&#39; ## ## No pre-processing ## Resampling: Cross-Validated (5 fold) ## Summary of sample sizes: 4587, 4589, 4587, 4589, 4588 ## Resampling results: ## ## ROC Sens Spec ## 0.7545115 0.4659618 0.8535653 # extract results from each test data summary.res &lt;- fit.cv.bin$resample summary.res ## ROC Sens Spec Resample ## 1 0.7444835 0.4739454 0.8630872 Fold1 ## 2 0.7544836 0.4502488 0.8561828 Fold2 ## 3 0.7786734 0.4739454 0.8738255 Fold3 ## 4 0.7350679 0.4626866 0.8373656 Fold4 ## 5 0.7598488 0.4689826 0.8373656 Fold5 mean(fit.cv.bin$resample$ROC) ## [1] 0.7545115 sd(fit.cv.bin$resample$ROC) ## [1] 0.01651437 "],["final-words.html", "Chapter 6 Final Words 6.1 Section", " Chapter 6 Final Words 6.1 Section "],["references.html", "References", " References "]]
